name: GO CI/CD Pipline

run-name: ${{ github.event_name }}-${{ github.ref_name }} by @${{ github.actor }}

on: 
  push:
    branches: ["main"]

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_REPOSITORY: go-actions-test

  VERSION: ${{ github.sha }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Run lint
        run: go vet ./...

      - name: Run tests
        run: go test -v ./...
  
  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24

      - name: Build
        run: CGO_ENABLED=0 GOOS=linux go build -o bin/main ./server

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-bin
          path: bin/main
    
  docker:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:latest
            ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.VERSION }}
          build-args: |
            VERSION=${{ env.VERSION }}

  execute:
    name: Execute
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Pull Docker image
        run: docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.VERSION }}
      
      - name: Run Docker container
        run: docker run --rm ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.VERSION }}

      # 5s后关闭容器
      - name: Wait for 5s
        uses: juliangruber/wait-action@v1
        with:
          time: 5s

      - name: Stop Docker container
        run: docker stop ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_REPOSITORY }}:${{ env.VERSION }}
      